{"version":3,"sources":["/home/havvy/tennu/tennu/src/plugin/help.sjs"],"names":["HELP_NOT_FOUND","isArray","require","format","inspect","Set","module","exports","init","client","imports","enabled","config","commandTrigger","replaceCommandTrigger","response","replace","map","registry","commandset","helpResponseMessage","query","cursor","reduce","cursor$2","topic","undefined","hasOwnProperty","Array","handlers","command","notice","args","length","slice","message","intent","start","concat","array","join","help","helpObject","JSON","parse","stringify","hooks","module$2","Object","keys","forEach","key","TypeError","commands","add"],"mappings":"AAKA;AAAA;AAAA;AAAA;AAAA,MAAMA,cAAA,GAAiB,8CAAvB,CALA;AAOA,MAAMC,OAAA,GAAUC,OAAA,CAAQ,MAAR,EAAgBD,OAAhC,CAPA;AAQA,MAAME,MAAA,GAASD,OAAA,CAAQ,MAAR,EAAgBC,MAA/B,CARA;AASA,MAAMC,OAAA,GAAUF,OAAA,CAAQ,MAAR,EAAgBE,OAAhC,CATA;AAUA,MAAMC,GAAA,GAAMH,OAAA,CAAQ,YAAR,EAAsBG,GAAlC,CAVA;AAYAC,MAAA,CAAOC,OAAP,GAAiB;AAAA,IACbC,IAAA,EAwzCU,UAxzCMC,MAwzCN,EAxzCcC,OAwzCd,EAxzCuB;AAAA,QAC7B,MAAMC,OAAA,GAAU,CAAEF,MAAA,CAAOG,MAAP,CAAc,cAAd,CAAlB,CAD6B;AAAA,QAG7B,IAAI,CAACD,OAAL,EAAc;AAAA,YAEV;AAAA,mBAAO,EAAP,CAFU;AAAA,SAHe;AAAA,QAQ7B,MAAME,cAAA,GAAiBJ,MAAA,CAAOG,MAAP,CAAc,iBAAd,CAAvB,CAR6B;AAAA,QAwzCvB;AAAA,iBA9yCGE,qBA8yCH,CA9yC0BC,QA8yC1B,EA9yCoC;AAAA,YACtC,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAAA,gBAC9B,OAAOA,QAAA,CAASC,OAAT,C,QAAA,EAA2BH,cAA3B,CAAP,CAD8B;AAAA,aAAlC,MAEO;AAAA,gBACH,OAAOE,QAAA,CAASE,GAAT,CAAaH,qBAAb,CAAP,CADG;AAAA,aAH+B;AAAA,SAVb;AAAA,QAkB7B,MAAMI,QAAA,GAAW,EAAjB,CAlB6B;AAAA,QAmB7B,MAAMC,UAAA,GAAa,IAAId,GAAJ,EAAnB,CAnB6B;AAAA,QAwzCvB,SAnyCGe,mBAmyCH,CAnyCwBC,KAmyCxB,EAnyC+B;AAAA,YACjC,MAAMC,MAAA,GAASD,KAAA,CAAME,MAAN,CAkyCb,UAlyCoCC,QAkyCpC,EAlyC4CC,KAkyC5C,EAlyCmD;AAAA,oBACjD,IAAI,OAAOD,QAAP,KAAkB,QAAtB,EAAgC;AAAA,wBAC5B,OAAOE,SAAP,CAD4B;AAAA,qBADiB;AAAA,oBAKjD,IAAIF,QAAA,CAAOG,cAAP,CAAsBF,KAAtB,CAAJ,EAAkC;AAAA,wBAC9B,OAAOD,QAAA,CAAOC,KAAP,CAAP,CAD8B;AAAA,qBAAlC,MAEO;AAAA,wBACH,OAAOC,SAAP,CADG;AAAA,qBAP0C;AAAA,iBAAtC,EAUZR,QAVY,CAAf,CADiC;AAAA,YAajC,IAAII,MAAA,KAAWI,SAAf,EAA0B;AAAA,gBACtB,OAAO1B,cAAP,CADsB;AAAA,aAbO;AAAA,YAiBjC,IAAI,OAAOsB,MAAP,KAAkB,QAAlB,IAA8BM,KAAA,CAAM3B,OAAN,CAAcqB,MAAd,CAAlC,EAAyD;AAAA,gBACrD,OAAOR,qBAAA,CAAsBQ,MAAtB,CAAP,CADqD;AAAA,aAjBxB;AAAA,YAqBjC,IAAI,OAAOA,MAAA,CAAO,GAAP,CAAP,KAAuB,QAAvB,IAAmCM,KAAA,CAAM3B,OAAN,CAAcqB,MAAA,CAAO,GAAP,CAAd,CAAvC,EAAmE;AAAA,gBAC/D,OAAOR,qBAAA,CAAsBQ,MAAA,CAAO,GAAP,CAAtB,CAAP,CAD+D;AAAA,aArBlC;AAAA,YAyBjC,OAAOtB,cAAP,CAzBiC;AAAA,SArBR;AAAA,QAiD7B,OAAO;AAAA,YACH6B,QAAA,EAAU;AAAA,gBACN,SAqwCF,UArwCqBC,OAqwCrB,EArwC8B;AAAA,oBACxBrB,MAAA,CAAOsB,MAAP,CAAc,SAAd,EAAyB,sBAAzB,EADwB;AAAA,oBAGxB;AAAA,0BAAMV,KAAA,GAAQS,OAAA,CAAQE,IAAR,CAAaC,MAAb,KAAwB,CAAxB,GAA4B,CAAC,MAAD,CAA5B,GAAuCH,OAAA,CAAQE,IAAR,CAAaE,KAAb,EAArD,CAHwB;AAAA,oBAIxB,IAAInB,QAAA,GAAWK,mBAAA,CAAoBC,KAApB,CAAf,CAJwB;AAAA,oBAMxB,OAAO;AAAA,wBACHc,OAAA,EAASpB,QADN;AAAA,wBAEHM,KAAA,EAAO,IAFJ;AAAA,wBAGHe,MAAA,EAAQ,KAHL;AAAA,qBAAP,CANwB;AAAA,iBADtB;AAAA,gBAcN,aAwvCF,UAxvCyBN,OAwvCzB,EAxvCkC;AAAA,oBAC5BrB,MAAA,CAAOsB,MAAP,CAAc,SAAd,EAAyB,0BAAzB,EAD4B;AAAA,oBAG5B,MAAMM,KAAA,GAAQ,CAAC,0BAAD,CAAd,CAH4B;AAAA,oBAI5B,OAAOA,KAAA,CAAMC,MAAN,CAAanB,UAAA,CAAWoB,KAAX,GAAmBC,IAAnB,CAAwB,IAAxB,CAAb,CAAP,CAJ4B;AAAA,iBAd1B;AAAA,aADP;AAAA,YAuBHjC,OAAA,EAAS;AAAA,gBACLkC,IAAA,EAAMrB,mBADD;AAAA,gBAELsB,UAAA,EA8uCF,YA9uC0B;AAAA,oBAAE,OAAOC,IAAA,CAAKC,KAAL,CAAWD,IAAA,CAAKE,SAAL,CAAe3B,QAAf,CAAX,CAAP,CAAF;AAAA,iBAFnB;AAAA,gBAGLlB,cAAA,EAAgBA,cAHX;AAAA,aAvBN;AAAA,YA6BH8C,KAAA,EAAO;AAAA,gBACHL,IAAA,EAyuCF,UAzuCkBM,QAyuClB,EAzuC0BN,IAyuC1B,EAzuCgC;AAAA,oBAC1B,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAAA,wBAC1BvB,QAAA,CAAS6B,QAAT,IAAmB,EAAC,KAAKN,IAAN,EAAnB,CAD0B;AAAA,wBAE1B,OAF0B;AAAA,qBADJ;AAAA,oBAM1B,IAAIb,KAAA,CAAM3B,OAAN,CAAcwC,IAAd,CAAJ,EAAyB;AAAA,wBACrBvB,QAAA,CAAS6B,QAAT,IAAmB,EAAC,KAAKN,IAAN,EAAnB,CADqB;AAAA,wBAErB,OAFqB;AAAA,qBANC;AAAA,oBAW1B,IAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAAA,wBAC1BO,MAAA,CAAOC,IAAP,CAAYR,IAAZ,EAAkBS,OAAlB,CA6tCV,UA7tC8CC,GA6tC9C,EA7tCmD;AAAA,4BACrC,IAAIA,GAAA,KAAQ,GAAZ,EAAiB;AAAA,gCACbjC,QAAA,CAAS6B,QAAT,IAAmBN,IAAA,CAAK,GAAL,CAAnB,CADa;AAAA,6BADoB;AAAA,4BAKrCvB,QAAA,CAASiC,GAAT,IAAgBV,IAAA,CAAKU,GAAL,CAAhB,CALqC;AAAA,yBAAzC,EAD0B;AAAA,wBAQ1B,OAR0B;AAAA,qBAXJ;AAAA,oBAsB1B,MAAM,IAAIC,SAAJ,CAAcjD,MAAA,CAAO,yCAAP,EAAkD4C,QAAlD,CAAd,CAAN,CAtB0B;AAAA,iBAD3B;AAAA,gBA0BHM,QAAA,EAgtCF,UAhtCsBN,QAgtCtB,EAhtC8BM,QAgtC9B,EAhtCwC;AAAA,oBAClC,IAAI,CAACzB,KAAA,CAAM3B,OAAN,CAAcoD,QAAd,CAAL,EAA8B;AAAA,wBAC1B,MAAM,IAAID,SAAJ,CAAcjD,MAAA,CAAO,6CAAP,EAAsD4C,QAAtD,CAAd,CAAN,CAD0B;AAAA,qBADI;AAAA,oBAKlCM,QAAA,CAASH,OAAT,CA2sCN,UA3sCiCpB,OA2sCjC,EA3sC0C;AAAA,wBAChC,IAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAAA,4BAC7B,MAAM,IAAIsB,SAAJ,CAAcjD,MAAA,CAAO,6CAAP,EAAsD4C,QAAtD,CAAd,CAAN,CAD6B;AAAA,yBADD;AAAA,wBAKhC5B,UAAA,CAAWmC,GAAX,CAAexB,OAAf,EALgC;AAAA,qBAApC,EALkC;AAAA,iBA1BnC;AAAA,aA7BJ;AAAA,YAsEHW,IAAA,EAAM;AAAA,gBACFA,IAAA,EAAM;AAAA,oBACF,mBADE;AAAA,oBAEF,GAFE;AAAA,oBAGF,oEAHE;AAAA,oBAIF,yCAJE;AAAA,oBAKF,2CALE;AAAA,oBAMF,EANE;AAAA,oBAOF,oBAPE;AAAA,oBAQF,qBARE;AAAA,iBADJ;AAAA,gBAYFY,QAAA,EAAU;AAAA,oBACN,eADM;AAAA,oBAEN,GAFM;AAAA,oBAGN,4BAHM;AAAA,iBAZR;AAAA,aAtEH;AAAA,YAyFHA,QAAA,EAAU;AAAA,gBAAC,MAAD;AAAA,gBAAS,UAAT;AAAA,aAzFP;AAAA,SAAP,CAjD6B;AAAA,KADpB;AAAA,CAAjB","file":"help.js","sourcesContent":["// This entire plugin is written so badly, but I don't know how to make it cleaner.\r\n// :(\r\n//\r\n// -- Havvy\r\n\r\nconst HELP_NOT_FOUND = 'Help file for selected topic does not exist.';\r\n\r\nconst isArray = require('util').isArray;\r\nconst format = require('util').format;\r\nconst inspect = require('util').inspect;\r\nconst Set = require('simplesets').Set;\r\n\r\nmodule.exports = {\r\n    init: function (client, imports) {\r\n        const enabled = !(client.config('disable-help'));\r\n\r\n        if (!enabled) {\r\n            // Empty module.\r\n            return {};\r\n        }\r\n\r\n        const commandTrigger = client.config('command-trigger');\r\n        // (string | [string]) -> string | [string]\r\n        function replaceCommandTrigger (response) {\r\n            if (typeof response === \"string\") {\r\n                return response.replace(/{{!}}/g, commandTrigger);\r\n            } else {\r\n                return response.map(replaceCommandTrigger);\r\n            }\r\n        }\r\n\r\n        const registry = {};\r\n        const commandset = new Set();\r\n\r\n        function helpResponseMessage (query) {\r\n            const cursor = query.reduce(function (cursor, topic) {\r\n                if (typeof cursor !== 'object') {\r\n                    return undefined;\r\n                }\r\n\r\n                if (cursor.hasOwnProperty(topic)) {\r\n                    return cursor[topic];\r\n                } else {\r\n                    return undefined;\r\n                }\r\n            }, registry);\r\n\r\n            if (cursor === undefined) {\r\n                return HELP_NOT_FOUND;\r\n            }\r\n\r\n            if (typeof cursor === 'string' || Array.isArray(cursor)) {\r\n                return replaceCommandTrigger(cursor);\r\n            }\r\n\r\n            if (typeof cursor['*'] === 'string' || Array.isArray(cursor['*'])) {\r\n                return replaceCommandTrigger(cursor['*']);\r\n            }\r\n\r\n            return HELP_NOT_FOUND;\r\n        }\r\n\r\n        return {\r\n            handlers: {\r\n                '!help': function (command) {\r\n                    client.notice('ModHelp', '!help being handled.');\r\n                    // Default to showing the help for the help module if no args given.\r\n                    const query = command.args.length === 0 ? ['help'] : command.args.slice();\r\n                    var response = helpResponseMessage(query);\r\n\r\n                    return {\r\n                        message: response,\r\n                        query: true,\r\n                        intent: 'say'\r\n                    };\r\n                },\r\n\r\n                '!commands': function (command) {\r\n                    client.notice('ModHelp', '!commands being handled.');\r\n\r\n                    const start = [\"List of known commands: \"];\r\n                    return start.concat(commandset.array().join(\", \"));\r\n                }\r\n            },\r\n\r\n            exports: {\r\n                help: helpResponseMessage,\r\n                helpObject: function () { return JSON.parse(JSON.stringify(registry)); },\r\n                HELP_NOT_FOUND: HELP_NOT_FOUND\r\n            },\r\n\r\n            hooks: {\r\n                help: function (module, help) {\r\n                    if (typeof help === 'string') {\r\n                        registry[module] = {'*': help}\r\n                        return;\r\n                    }\r\n\r\n                    if (Array.isArray(help)) {\r\n                        registry[module] = {'*': help}\r\n                        return;\r\n                    }\r\n\r\n                    if (typeof help === 'object') {\r\n                        Object.keys(help).forEach(function (key) {\r\n                            if (key === '*') {\r\n                                registry[module] = help['*'];\r\n                            }\r\n\r\n                            registry[key] = help[key];\r\n                        });\r\n                        return;\r\n                    }\r\n\r\n                    throw new TypeError(format('Help property for module %s is invalid.', module));\r\n                },\r\n\r\n                commands: function (module, commands) {\r\n                    if (!Array.isArray(commands)) {\r\n                        throw new TypeError(format('Commands property for module %s is invalid.', module));\r\n                    }\r\n\r\n                    commands.forEach(function (command) {\r\n                        if (typeof command !== 'string') {\r\n                            throw new TypeError(format('Commands property for module %s is invalid.', module));\r\n                        }\r\n\r\n                        commandset.add(command);\r\n                    });\r\n                }\r\n            },\r\n\r\n            help: {\r\n                help: [\r\n                    '{{!}}help <query>',\r\n                    ' ',\r\n                    'Display the help message for the topic located at the given query.',\r\n                    'Query can be made of multiple subtopics',\r\n                    'Without a query, shows this help message.',\r\n                    '',\r\n                    'Ex: !help commands',\r\n                    'Ex: !help uno start'\r\n                ],\r\n\r\n                commands: [\r\n                    '{{!}}commands',\r\n                    ' ',\r\n                    'Show the list of commands.'\r\n                ]\r\n            },\r\n\r\n            commands: ['help', 'commands']\r\n        };\r\n    }\r\n};"],"sourceRoot":"/source/"}