{"version":3,"sources":["/home/havvy/tennu/tennu/src/test/subscriber.sjs"],"names":["sinon","require","assert","equal","inspect","format","install","debug","logfn","console","log","bind","BiSubscriber","EventEmitter","describe","subscriber","primary","secondary","beforeEach","primarySpy","secondarySpy","spy","it","on","emit","called","primaryDataSpy","secondaryDataSpy","once","calledOnce","calledTwice","off"],"mappings":"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","file":"subscriber.js","sourcesContent":["const sinon = require('sinon');\nconst assert = require('better-assert');\nconst equal = require('deep-eql');\nconst inspect = require('util').inspect;\nconst format = require('util').format;\nrequire('source-map-support').install();\n\nconst debug = false;\nconst logfn = debug ? console.log.bind(console) : function () {};\n\nconst BiSubscriber = require('../lib/bisubscriber');\nconst EventEmitter = require('events').EventEmitter;\n\ndescribe 'BiSubscribers' {\n    var subscriber, primary, secondary;\n    beforeEach {\n        logfn(/* newline */);\n        primary = new EventEmitter();\n        secondary = new EventEmitter();\n        subscriber = new BiSubscriber(primary, secondary);\n    }\n\n    describe 'subscribe events to two event emitters' {\n        var primarySpy, secondarySpy;\n\n        beforeEach {\n            primarySpy = sinon.spy();\n            secondarySpy = sinon.spy();\n        }\n\n        it 'treats most events as primary events' {\n            subscriber.on('event', primarySpy);\n            primary.emit('event');\n\n            assert(primarySpy.called);\n            assert(!secondarySpy.called);\n        }\n\n        it 'treats events starting with \"!\" to be secondary' {\n            subscriber.on('!event', secondarySpy);\n            secondary.emit('event');\n\n            assert(!primarySpy.called);\n            assert(secondarySpy.called);\n        }\n\n        it 'can subscribe multiple events' {\n            const primaryDataSpy = sinon.spy();\n            const secondaryDataSpy = sinon.spy();\n\n            subscriber.on({\n                'event': primarySpy,\n                '!event': secondarySpy,\n                'data': primaryDataSpy,\n                '!data': secondaryDataSpy\n            });\n\n            primary.emit('event');\n\n            assert(primarySpy.called);\n            assert(!secondarySpy.called);\n\n            secondary.emit('data');\n\n            assert(!primaryDataSpy.called);\n            assert(secondaryDataSpy.called);\n        }\n    }\n\n    describe 'quantification (on vs. once)' {\n        var spy;\n\n        beforeEach {\n            spy = sinon.spy();\n        }\n\n        it 'handles once one time (primary)' {\n            subscriber.once('event', spy);\n\n            primary.emit('event');\n            primary.emit('event');\n\n            assert(spy.calledOnce);\n        }\n\n        it 'handles once one time (secondary)' {\n            subscriber.once('!event', spy);\n\n            secondary.emit('event');\n            secondary.emit('event');\n\n            assert(spy.calledOnce);\n        }\n\n        it 'handles on multiple times' {\n            subscriber.on('event', spy);\n\n            primary.emit('event');\n            primary.emit('event');\n\n            assert(spy.calledTwice);\n        }\n\n        it 'handles once one time' {\n            subscriber.on('!event', spy);\n\n            secondary.emit('event');\n            secondary.emit('event');\n\n            assert(spy.calledTwice);\n        }\n    }\n\n    describe 'unsubscribing' {\n        var spy;\n\n        beforeEach {\n            spy = sinon.spy();\n        }\n\n        it 'primary w/two arg version' {\n            subscriber.on('event', spy);\n            primary.emit('event');\n            subscriber.off('event', spy);\n            primary.emit('event');\n\n            assert(spy.calledOnce);\n        }\n\n        it 'primary w/object version' {\n            subscriber.on('event', spy);\n            subscriber.on('event2', spy);\n\n            primary.emit('event2');\n\n            subscriber.off({\n                'event': spy,\n                'event2': spy\n            });\n\n            primary.emit('event');\n            primary.emit('event2');\n\n            assert(spy.calledOnce);\n        }\n    }\n}"],"sourceRoot":"/source/"}