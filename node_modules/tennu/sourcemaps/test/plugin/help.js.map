{"version":3,"sources":["/home/havvy/tennu/tennu/src/test/plugin/help.sjs"],"names":["sinon","require","assert","equal","inspect","format","install","debug","logfn","console","log","bind","HelpPlugin","moduleHelps","a","b","b1","b2","b3","c","c1","d","client","config","value","describe","instance","help","HELP_NOT_FOUND","beforeEach","init","exports","hooks","it"],"mappings":"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","file":"plugin/help.js","sourcesContent":["const sinon = require('sinon');\nconst assert = require('better-assert');\nconst equal = require('deep-eql');\nconst inspect = require('util').inspect;\nconst format = require('util').format;\nrequire('source-map-support').install();\n\nconst debug = false;\nconst logfn = debug ? console.log.bind(console) : function () {};\n\nconst HelpPlugin = require('../../tennu_plugins/help');\n\nconst moduleHelps = {\n    a: 'a *',\n    b: {\n        b: {\n            '*': 'b *',\n            b1: 'b 1',\n            b2: ['b 2_1', 'b 2_2'],\n            b3: {\n                '*': 'b 3 *'\n            },\n        },\n    },\n    c: {\n        c1: 'c 1'\n    },\n    d: ['d *_1', 'd *_2']\n};\n\nconst client = {\n    config: function (value) {\n        if (value === 'help-disabled') {\n            return false;\n        }\n    }\n};\n\ndescribe 'Help plugin' {\n    var instance, help, HELP_NOT_FOUND;\n\n    beforeEach {\n        logfn(/* newline */);\n\n        instance = HelpPlugin.init(client, {});\n        HELP_NOT_FOUND = instance.exports.HELP_NOT_FOUND;\n\n        instance.hooks.help('a', moduleHelps.a);\n        instance.hooks.help('b', moduleHelps.b);\n        instance.hooks.help('c', moduleHelps.c);\n        instance.hooks.help('d', moduleHelps.d);\n\n        help = instance.exports.help;\n    }\n\n    it 'returns HELP_NOT_FOUND for unknown topics' {\n        assert(help(['dnd']) === HELP_NOT_FOUND);\n    }\n\n    it 'returns HELP_NOT_FOUND for subtopics of unknown topics' {\n        assert(help(['dne', 'subtopic']) === HELP_NOT_FOUND);\n    }\n\n    it 'assigns the topic of the module name the value of the string when given a string' {\n        logfn(inspect(help(['a'])));\n        assert(help(['a']) === 'a *');\n    }\n\n    it 'assigns the topic of the module name the value of the array when given an array' {\n        logfn(inspect(help(['d'])));\n        assert(equal(help(['d']), ['d *_1', 'd *_2']));\n    }\n\n    it 'gives the * property of topics with an object value' {\n        assert(help(['b']) === 'b *');\n    }\n\n    it 'gives HELP_NOT_FOUND for topics with an object value without the * property' {\n        assert(help(['c']) === HELP_NOT_FOUND);\n    }\n\n    it 'gives the subtopic string value for subtopic type of string' {\n        logfn(inspect(help(['b', 'b1'])));\n        assert(help(['b', 'b1']) === 'b 1');\n    }\n\n    it 'gives the subtopic array value for subtopic type of array' {\n        logfn(inspect(help(['b', 'b2'])));\n        assert(equal(help(['b', 'b2']), ['b 2_1', 'b 2_2']));\n    }\n\n    it 'gives the * property of subtopic type of object' {\n        logfn(inspect(help(['b', 'b3'])));\n        assert(help(['b', 'b3']) === 'b 3 *');\n    }\n\n    it 'gives HELP_NOT_FOUND for nonexistent subtopic of existing topic' {\n        logfn(inspect(help(['b', 'b4'])));\n        assert(help(['b', 'b4']) === HELP_NOT_FOUND);\n    }\n}\n"],"sourceRoot":"/source/"}