{"version":3,"file":"output-socket.sjs","names":[],"mappings":"","sources":["output-socket.sjs"],"sourcesContent":["const sinon = require('sinon');\nconst assert = require('better-assert');\nconst equal = require('deep-eql');\nconst inspect = require('util').inspect;\nconst format = require('util').format;\nrequire('source-map-support').install();\n\nconst debug = false;\nconst logfn = debug ? console.log.bind(console) : function () {};\nconst logger = {debug: logfn, info: logfn, notice: logfn, warn: logfn, error: logfn};\n\nconst channel = \"#test\";\nconst nickname = 'testbot';\n\nconst nicknamefn = function () { return nickname; };\n\nconst OutputSocket = require('../lib/output-socket.js');\nconst EventEmitter = require('after-events');\n\ndescribe 'IRC Output Socket:' {\n    var socket, out, messageHandler;\n\n    beforeEach {\n        logfn(/* newline */);\n        messageHandler = new EventEmitter();\n        socket = { raw: sinon.spy() };\n        out = new OutputSocket(socket, messageHandler, nicknamefn, logger);\n    }\n\n    describe 'Join:' {\n        it 'Sends the command.' {\n            out.join(channel);\n            assert(socket.raw.calledWithExactly(format(\"JOIN :%s\", channel)));\n        }\n\n        it 'On Success' (done) {\n            const joinmsg = {nickname: nickname, channel: channel};\n\n            socket.raw = function () {\n                messageHandler.emit('join', joinmsg);\n            };\n\n            assert(out.join(channel) === undefined);\n            done();\n        }\n    }\n\n    it 'can send private messages' {\n        out.say('#test', 'Hi');\n        assert(socket.raw.calledWithExactly(\"PRIVMSG #test :Hi\"));\n    }\n\n    it 'can part without a reason' {\n        out.part('#test');\n        assert(socket.raw.calledWithExactly(\"PART #test\"));\n    }\n\n    it 'can part with a reason' {\n        out.part('#test', 'the reason');\n        assert(socket.raw.calledWithExactly(\"PART #test :the reason\"));\n    }\n\n    it 'can quit without a reason' {\n        out.quit();\n        assert(socket.raw.calledWithExactly(\"QUIT\"));\n    }\n\n    it 'can quit with a reason' {\n        out.quit('the reason');\n        assert(socket.raw.calledWithExactly(\"QUIT :the reason\"));\n    }\n}"],"sourceRoot":"/source/"}