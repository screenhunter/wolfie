{"version":3,"sources":["/home/havvy/tennu/tennu/src/lib/bisubscriber.js"],"names":["inspect","require","BiEventSubscriber","primary","secondary","_primary","_secondary","_primaryOff","removeListener","_secondaryOff","prototype","_onString","type","listener","split","forEach","event","on","substr","bind","_onMap","typemap","_offString","_offMap","key","_onceString","once","_onceMap","map","arguments","length","Exception","off","module","exports"],"mappings":"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","file":"bisubscriber.js","sourcesContent":["/**\n * BiEventSubscriber\n *\n * This event subscriber takes two event emitters, primary and secondary.\n * Events can be subscribed in two ways:\n *\n * 1. An object dictionary where the keys are the events to listen to and the\n *    and the values are the functions to register for the events.\n *\n *    Ex:  subscriber.on({'join' : onjoin, '!help !h' : onhelp});\n *\n * 2. If there's only one string/function pair, you can pass them as two\n *    arguments.\n *\n *    Ex:  subscriber.on('join', onjoin);\n *\n * The string value is a space delimited list of events to listen to. If the\n * event begins with an exclamation mark, then it will be subscribed to the\n * secondary event emitter with the exclamation mark stripped. Otherwise, the\n * listener will be subscribed to the primary event emitter.\n *\n * Event listeners will be wrapped with an error catching function that prints\n * the stacktrace to std out. If you want different behavior, modify _wrap().\n *\n * Public Methods:\n *   - new(primary: EventEmitter, secondary: EventEmitter): BiEventSubscriber\n *   - on(listenerMap: Object): undefined\n *   - on(events: string, listener: function): undefined\n *   - once(listenerMap: Object): undefined\n *   - once(events: string, listener: function): undefined\n *   - off(listenerMap: Object): undefined\n *   - off(events: string, listener: function): undefined\n */\n\nconst inspect = require('util').inspect;\n\nconst BiEventSubscriber = function (primary, secondary) {\n    if (!(this instanceof BiEventSubscriber)) {\n        return new BiEventSubscriber;\n    }\n\n    this._primary = primary;\n    this._secondary = secondary;\n\n    this._primaryOff = (primary.removeListener ? 'removeListener' : 'off');\n    this._secondaryOff = (secondary.removeListener ? 'removeListener' : 'off');\n};\n\nBiEventSubscriber.prototype = {\n    _onString : function (type, listener) {\n        type.split(' ').forEach(function (event) {\n            if (event[0] === '!') {\n                this._secondary.on(event.substr(1), listener);\n            } else {\n                this._primary.on(event, listener);\n            }\n        }.bind(this));\n    },\n\n    _onMap : function (typemap) {\n        for (var type in typemap) {\n            this._onString(type, typemap[type]);\n        }\n    },\n\n    _offString : function (type, listener) {\n        type.split(' ').forEach(function (event) {\n            if (event[0] === '!') {\n                this._secondary[this._secondaryOff](event, listener);\n            } else {\n                this._primary[this._primaryOff](event, listener);\n            }\n        }.bind(this));\n    },\n\n    _offMap : function (typemap) {\n        for (var key in typemap) {\n            this._offString(key, typemap[key]);\n        }\n    },\n\n    _onceString : function (type, listener) {\n        type.split(' ').forEach(function (event) {\n            if (event[0] === '!') {\n                this._secondary.once(event.substr(1), listener);\n            } else {\n                this._primary.once(event, listener);\n            }\n        }.bind(this));\n    },\n\n    _onceMap : function (typemap) {\n        for (var event in typemap) {\n            this._onceString(event, map[event]);\n        }\n    },\n\n    on : function () {\n        switch (arguments.length) {\n            case 1: this._onMap(arguments[0]); break;\n            case 2: this._onString(arguments[0], arguments[1]); break;\n            default: throw new Exception('on takes one (object) or two (string, fn) arguments.');\n        }\n    },\n\n    off: function () {\n        switch (arguments.length) {\n            case 1: this._offMap(arguments[0]); break;\n            case 2: this._offString(arguments[0], arguments[1]); break;\n            default: throw new Exception('off takes one (object) or two (string, fn) arguments.')\n        }\n    },\n\n    once : function () {\n        switch (arguments.length) {\n            case 1: return this._onceMap(arguments[0]);\n            case 2: return this._onceString(arguments[0], arguments[1]);\n            default: throw new Exception('on takes one (object) or two (string, fn) arguments.');\n        }\n    }\n};\n\nmodule.exports = BiEventSubscriber;"],"sourceRoot":"/source/"}