{"version":3,"sources":["/home/havvy/tennu/tennu/src/lib/chunked-message-parser.sjs"],"names":["util","require","events","ChunkedMessageParser","messageParser","parser","Object","create","prototype","listen","EventEmitter","constructor","parse","message","defaultAction","on","bind","emit","name","module","exports","MotdHandler","motd","msg","push","args","cMsg","BanHandler","bans"],"mappings":"AAAA,IAAIA,IAAA,GAAOC,OAAA,CAAQ,MAAR,CAAX;AACA,IAAIC,MAAA,GAASD,OAAA,CAAQ,QAAR,CAAb,CADA;AAGA,IAAIE,oBAAA,GAk0CU,UAl0CuBC,aAk0CvB,EAl0CsC;AAAA,IAChD,IAAIC,MAAA,GAASC,MAAA,CAAOC,MAAP,CAAcJ,oBAAA,CAAqBK,SAAnC,CAAb,CADgD;AAAA,IAEhD,IAAIJ,aAAJ,EAAmB;AAAA,QACf,KAAKK,MAAL,CAAYL,aAAZ,EADe;AAAA,KAF6B;AAAA,CAApD,CAHA;AAUAD,oBAAA,CAAqBK,SAArB,GAAiCF,MAAA,CAAOC,MAAP,CAAcL,MAAA,CAAOQ,YAAP,CAAoBF,SAAlC,CAAjC,CAVA;AAWAL,oBAAA,CAAqBK,SAArB,CAA+BG,WAA/B,GAA6CR,oBAA7C,CAXA;AAaAA,oBAAA,CAAqBK,SAArB,CAA+BI,KAA/B,GAwzCc,UAxzCmCC,OAwzCnC,EAxzC4C;AAAA,IACtD,KAAKC,aAAL,CAAmBD,OAAnB,EADsD;AAAA,CAA1D,CAbA;AAiBAV,oBAAA,CAAqBK,SAArB,CAA+BC,MAA/B,GAozCc,UApzCoCL,aAozCpC,EApzCmD;AAAA,IAC7DA,aAAA,CAAcW,EAAd,CAAiB,UAAjB,EAA6B,KAAKH,KAAL,CAAWI,IAAX,CAAgB,IAAhB,CAA7B,EAD6D;AAAA,CAAjE,CAjBA;AAqBAb,oBAAA,CAAqBK,SAArB,CAA+BM,aAA/B,GAgzCc,UAhzC2CD,OAgzC3C,EAhzCoD;AAAA,IAC9D,KAAKI,IAAL,CAAUJ,OAAA,CAAQK,IAAlB,EAAwBL,OAAxB,EAD8D;AAAA,CAAlE,CArBA;AAyBAM,MAAA,CAAOC,OAAP,GAAiBjB,oBAAjB,CAzBA;AA6BA;AAAAgB,MAAA,CAAOC,OAAP,CAAeC,WAAf,GAwyCc,YAxyC2B;AAAA,IACrCC,IAAA,GAAO,EAAP,CADqC;AAAA,IAIrC;AAAA,WAAO;AAAA,QACH,OAmyCM,UAnyCYC,GAmyCZ,EAnyCiB;AAAA,YACnBD,IAAA,CAAKE,IAAL,CAAUD,GAAA,CAAIE,IAAJ,CAAS,CAAT,CAAV,EADmB;AAAA,SADpB;AAAA,QAKH,OA+xCM,UA/xCYF,GA+xCZ,EA/xCiB;AAAA,YACnBG,IAAA,GAAOpB,MAAA,CAAOC,MAAP,CAAcgB,GAAd,CAAP,CADmB;AAAA,YAEnBG,IAAA,CAAKR,IAAL,GAAY,MAAZ,CAFmB;AAAA,YAGnBQ,IAAA,CAAKJ,IAAL,GAAYA,IAAZ,CAHmB;AAAA,YAInB,OAAOI,IAAP,CAJmB;AAAA,SALpB;AAAA,KAAP,CAJqC;AAAA,CAAzC,CA7BA;AA+CAP,MAAA,CAAOC,OAAP,CAAeO,UAAf,GAsxCc,YAtxC0B;AAAA,IACpCC,IAAA,GAAO,EAAP,CADoC;AAAA,IAGpC,OAAO,EAAP,CAHoC;AAAA,CAAxC","file":"chunked-message-parser.js","sourcesContent":["var util = require('util');\nvar events = require('events');\n\nvar ChunkedMessageParser = function (messageParser) {\n    var parser = Object.create(ChunkedMessageParser.prototype);\n    if (messageParser) {\n        this.listen(messageParser);\n    }\n};\n\nChunkedMessageParser.prototype = Object.create(events.EventEmitter.prototype);\nChunkedMessageParser.prototype.constructor = ChunkedMessageParser;\n\nChunkedMessageParser.prototype.parse = function (message) {\n    this.defaultAction(message);\n};\n\nChunkedMessageParser.prototype.listen = function (messageParser) {\n    messageParser.on('_message', this.parse.bind(this));\n};\n\nChunkedMessageParser.prototype.defaultAction = function (message) {\n    this.emit(message.name, message);\n};\n\nmodule.exports = ChunkedMessageParser;\n\n// ---------------------------------------------------------------------------\n\nmodule.exports.MotdHandler = function () {\n    motd = [];\n\n    // 372 - MOTD, 376 - MOTD over\n    return {\n        \"372\" : function (msg) {\n            motd.push(msg.args[2]);\n        },\n\n        \"376\" : function (msg) {\n            cMsg = Object.create(msg);\n            cMsg.name = 'motd';\n            cMsg.motd = motd;\n            return cMsg;\n        }\n    };\n};\n\nmodule.exports.BanHandler = function () {\n    bans = [];\n\n    return {\n        // ...\n    };\n};"],"sourceRoot":"/source/"}