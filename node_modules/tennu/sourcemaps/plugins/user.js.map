{"version":3,"sources":["/home/havvy/tennu/tennu/src/plugin/user.sjs"],"names":["Q","require","module","exports","init","client","imports","isIdentifiedAs","nickname","accountname","deferred","defer","toLowerCase","timeout","setTimeout","unregister","error","reject","Error","fornick","fn","reply","debug","off","handlers","clearTimeout","result","onLoggedIn","identifiedas","onRegNick","onWhoisEnd","resolve","onError","on","setImmediate","whois","promise"],"mappings":"AAAA,MAAMA,CAAA,GAAIC,OAAA,CAAQ,GAAR,CAAV;AAEAC,MAAA,CAAOC,OAAP,GAAiB;AAAA,IACbC,IAAA,EAi0CU,UAj0CMC,MAi0CN,EAj0CcC,OAi0Cd,EAj0CuB;AAAA,QAC7B,MAAMC,cAAA,GAg0CA,UAh0C0BC,QAg0C1B,EAh0CoCC,WAg0CpC,EAh0CiD;AAAA,YACnD,MAAMC,QAAA,GAAWV,CAAA,CAAEW,KAAF,EAAjB,CADmD;AAAA,YAEnDH,QAAA,GAAWA,QAAA,CAASI,WAAT,EAAX,CAFmD;AAAA,YAGnDH,WAAA,GAAcA,WAAA,CAAYG,WAAZ,EAAd,CAHmD;AAAA,YAKnD,MAAMC,OAAA,GAAUC,UAAA,CAAW,YAAY;AAAA,oBACnCC,UAAA,GADmC;AAAA,oBAEnCV,MAAA,CAAOW,KAAP,CAAa,YAAb,EAA2B,kDAA3B,EAFmC;AAAA,oBAGnCN,QAAA,CAASO,MAAT,CAAgB,IAAIC,KAAJ,CAAU,oBAAV,CAAhB,EAHmC;AAAA,iBAAvB,EAIb,OAAO,EAAP,GAAY,EAJC,CAAhB,CALmD;AAAA,YAWnD,MAAMC,OAAA,GAAU,UAAUC,EAAV,EAAc;AAAA,gBAC1B,OAAO,UAAUC,KAAV,EAAiB;AAAA,oBACpB,IAAIA,KAAA,CAAMb,QAAN,CAAeI,WAAf,OAAiCJ,QAArC,EAA+C;AAAA,wBAC3CY,EAAA,CAAGC,KAAH,EAD2C;AAAA,qBAA/C,MAEO;AAAA,wBACHhB,MAAA,CAAOiB,KAAP,CAAa,YAAb,EAA2B,sCAAsCD,KAAA,CAAMb,QAAvE,EADG;AAAA,qBAHa;AAAA,iBAAxB,CAD0B;AAAA,aAA9B,CAXmD;AAAA,YAqBnD,MAAMO,UAAA,GAAa,YAAY;AAAA,gBAC3BV,MAAA,CAAOiB,KAAP,CAAa,YAAb,EAA2B,wCAA3B,EAD2B;AAAA,gBAE3BjB,MAAA,CAAOkB,GAAP,CAAWC,QAAX,EAF2B;AAAA,gBAG3BC,YAAA,CAAaZ,OAAb,EAH2B;AAAA,aAA/B,CArBmD;AAAA,YA2BnD,IAAIa,MAAA,GAAS,KAAb,CA3BmD;AAAA,YA6BnD;AAAA,kBAAMC,UAAA,GAAaR,OAAA,CAAQ,UAAUE,KAAV,EAAiB;AAAA,oBACxC,IAAIA,KAAA,CAAMO,YAAN,CAAmBhB,WAAnB,OAAqCH,WAAzC,EAAsD;AAAA,wBAClDJ,MAAA,CAAOiB,KAAP,CAAa,YAAb,EAA2B,+BAA3B,EADkD;AAAA,wBAElDI,MAAA,GAAS,IAAT,CAFkD;AAAA,qBADd;AAAA,iBAAzB,CAAnB,CA7BmD;AAAA,YAoCnD,MAAMG,SAAA,GAAYV,OAAA,CAAQ,UAAUE,KAAV,EAAiB;AAAA,oBACvC,IAAIb,QAAA,KAAaC,WAAjB,EAA8B;AAAA,wBAC1BJ,MAAA,CAAOiB,KAAP,CAAa,YAAb,EAA2B,+BAA3B,EAD0B;AAAA,wBAE1BI,MAAA,GAAS,IAAT,CAF0B;AAAA,qBADS;AAAA,iBAAzB,CAAlB,CApCmD;AAAA,YA2CnD,MAAMI,UAAA,GAAaX,OAAA,CAAQ,UAAUE,KAAV,EAAiB;AAAA,oBACxChB,MAAA,CAAOiB,KAAP,CAAa,YAAb,EAA2B,oCAA3B,EADwC;AAAA,oBAExCP,UAAA,GAFwC;AAAA,oBAGxCV,MAAA,CAAOiB,KAAP,CAAa,YAAb,EAA2B,eAAeI,MAA1C,EAHwC;AAAA,oBAIxChB,QAAA,CAASqB,OAAT,CAAiBL,MAAjB,EAJwC;AAAA,iBAAzB,CAAnB,CA3CmD;AAAA,YAkDnD,MAAMM,OAAA,GAAUb,OAAA,CAAQ,UAAUE,KAAV,EAAiB;AAAA,oBACrCN,UAAA,GADqC;AAAA,oBAErCL,QAAA,CAASqB,OAAT,CAAiB,KAAjB,EAFqC;AAAA,iBAAzB,CAAhB,CAlDmD;AAAA,YAuDnD,MAAMP,QAAA,GAAW;AAAA,oBACb,oBAAoBK,SADP;AAAA,oBAEb,qBAAqBF,UAFR;AAAA,oBAGb,kBAAkBG,UAHL;AAAA,oBAIb,kBAAkBE,OAJL;AAAA,iBAAjB,CAvDmD;AAAA,YA8DnD3B,MAAA,CAAOiB,KAAP,CAAa,sCAAb,EA9DmD;AAAA,YA+DnDjB,MAAA,CAAO4B,EAAP,CAAUT,QAAV,EA/DmD;AAAA,YAgEnDU,YAAA,CAAa,YAAY;AAAA,gBAAE7B,MAAA,CAAO8B,KAAP,CAAa3B,QAAb,EAAF;AAAA,aAAzB,EAhEmD;AAAA,YAkEnD,OAAOE,QAAA,CAAS0B,OAAhB,CAlEmD;AAAA,SAAvD,CAD6B;AAAA,QAsE7B,OAAO,EACHjC,OAAA,EAAS,EACLI,cAAA,EAAgBA,cADX,EADN,EAAP,CAtE6B;AAAA,KADpB;AAAA,CAAjB","file":"user.js","sourcesContent":["const Q = require('q');\n\nmodule.exports = {\n    init: function (client, imports) {\n        const isIdentifiedAs = function(nickname, accountname) {\n            const deferred = Q.defer();\n            nickname = nickname.toLowerCase();\n            accountname = accountname.toLowerCase();\n\n            const timeout = setTimeout(function () {\n                unregister();\n                client.error(\"PluginUser\", \"isIdentifiedAs request timed out after one hour.\");\n                deferred.reject(new Error(\"Request timed out.\"));\n            }, 1000 * 60 * 60);\n\n            const fornick = function (fn) {\n                return function (reply) {\n                    if (reply.nickname.toLowerCase() === nickname) {\n                        fn(reply);\n                    } else {\n                        client.debug(\"PluginUser\", \"Whois response for another nick: \" + reply.nickname);\n                    }\n                }\n            };\n\n            const unregister = function () {\n                client.debug('PluginUser', 'Unregistering isIdentifiedAs handlers.');\n                client.off(handlers);\n                clearTimeout(timeout)\n            }\n\n            var result = false; // Until proven otherwise.\n\n            const onLoggedIn = fornick(function (reply) {\n                if (reply.identifiedas.toLowerCase() === accountname) {\n                    client.debug('PluginUser', \"isIdentifiedAs found a match.\");\n                    result = true;\n                }\n            });\n\n            const onRegNick = fornick(function (reply) {\n                if (nickname === accountname) {\n                    client.debug('PluginUser', \"isIdentifiedAs found a match.\");\n                    result = true;\n                }\n            });\n\n            const onWhoisEnd = fornick(function (reply) {\n                client.debug('PluginUser', \"isIdentifiedAs found end of whois.\");\n                unregister();\n                client.debug('PluginUser', \"Resolving \" + result);\n                deferred.resolve(result)\n            });\n\n            const onError = fornick(function (reply) {\n                unregister();\n                deferred.resolve(false);\n            });\n\n            const handlers = {\n                \"rpl_whoisregnick\": onRegNick,\n                \"rpl_whoisloggedin\": onLoggedIn,\n                \"rpl_endofwhois\": onWhoisEnd,\n                \"err_nosuchnick\": onError\n            };\n\n            client.debug('Registerting isIdentifiedAs handlers');\n            client.on(handlers);\n            setImmediate(function () { client.whois(nickname) });\n\n            return deferred.promise;\n        };\n\n        return {\n            exports: {\n                isIdentifiedAs: isIdentifiedAs\n            }\n        };\n    }\n};"],"sourceRoot":"/source/"}