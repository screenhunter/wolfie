{"version":3,"sources":["/home/havvy/tennu/tennu/src/plugin/channel.sjs"],"names":["module","exports","init","client","callbacks","hasDied","hooks","die","plugin","onDie","push","from","cause","forEach","cb","console","log","require","inspect"],"mappings":"AAAAA,MAAA,CAAOC,OAAP,GAAiB;AAAA,IACbC,IAAA,EA22CU,UA32CMC,MA22CN,EA32Cc;AAAA,QACpB,IAAIC,SAAA,GAAY,EAAhB,CADoB;AAAA,QAEpB,IAAIC,OAAA,GAAU,KAAd,CAFoB;AAAA,QAIpB,OAAO;AAAA,YACHC,KAAA,EAAO;AAAA,gBACHC,GAAA,EAq2CF,UAr2CiBC,MAq2CjB,EAr2CyBC,KAq2CzB,EAr2CgC;AAAA,oBAC1BL,SAAA,CAAUM,IAAV,CAAeD,KAAf,EAD0B;AAAA,iBAD3B;AAAA,aADJ;AAAA,YAOHR,OAAA,EAAS;AAAA,gBACLM,GAAA,EA+1CF,UA/1CiBI,IA+1CjB,EA/1CuBC,KA+1CvB,EA/1C8B;AAAA,oBACxB,IAAIP,OAAJ,EAAa;AAAA,wBACT,OADS;AAAA,qBADW;AAAA,oBAKxBA,OAAA,GAAU,IAAV,CALwB;AAAA,oBAOxBD,SAAA,CAAUS,OAAV,CAw1CN,UAx1CkCC,EAw1ClC,EAx1CsC;AAAA,wBAC5B,IAAI,OAAOA,EAAP,KAAc,UAAlB,EAA8B;AAAA,4BAC1BC,OAAA,CAAQC,GAAR,CAAYC,OAAA,CAAQ,MAAR,EAAgBC,OAAhB,CAAwBJ,EAAxB,CAAZ,EAD0B;AAAA,4BAE1B,OAF0B;AAAA,yBADF;AAAA,wBAM5BA,EAAA,CAAGH,IAAH,EAASC,KAAT,EAN4B;AAAA,qBAAhC,EAPwB;AAAA,iBADvB;AAAA,aAPN;AAAA,SAAP,CAJoB;AAAA,KADX;AAAA,CAAjB","file":"lifetime.js","sourcesContent":["/*\n\nvar SSet = require(\"simplesets\").Set;\n\nvar isSelf = function (nrc, nick) {\n    return nrc.getNick() === nick;\n};\n\nvar channels = {};\n\nvar Channel = function (name) {\n    this.name = name;\n    this.users = new SSet();\n};\n\nChannel.prototype.addUser = function (user) {\n    this.users.add(user);\n};\n\nChannel.prototype.removeUser = function (user) {\n    this.users.remove(user);\n};\n\nvar removeUserChannel = function (user) {\n    channels[channel].removeUser(user);\n};\n\nvar selfPart = function (channel) {\n    channels[channel];\n};\n\nvar selfJoin = function (channel) {\n    channels[channel] = new Channel(channel);\n};\n\n/**\n * Responds to the 353 raw numeric, which is sent when joining a channel.\n * The Message object handles adding users and channel automatically, so\n * there really isn't any work that has to be done here other than actually\n * adding the channels to the users.\n *//*\nvar namesHandler = function (msg) {\n    msg.users.forEach(function (user) {\n        addChannelToUser(msg.channel, user);\n    });\n};\n\nvar onleave = function () {\n    var self = {\n        part: selfPart,\n        quit: function () {},\n        join: selfJoin\n    };\n\n    var user = {\n        part: removeUserChannel,\n        quit: userQuit,\n        join: addUserChannel\n    };\n\n    return function (msg) {\n        if (isSelf(this, msg.actor)) {\n            self[msg.type](msg.channel);\n        } else {\n            user[msg.type](msg.actor, msg.channel);\n        }\n    };\n}();\n\nvar onNick = function (msg) {\n    channels.forEach(function (channel) {\n        if (channel.users.has(msg.actor)) {\n            channel.users.remove(msg.actor);\n            channel.users.add(msg.newNick);\n        }\n    });\n};\n\nmodule.exports = {\n    name: \"users\",\n    exports: {\n        users:users\n    },\n    handlers: {\n        \"join part quit\" : onLeave,\n        \"nick\" : onNick,\n        \"353\" : namesHandler\n    }\n};\n\n*/\n\nmodule.exports = {\n    init: function (tennu) {\n        return {};\n    }\n};"],"sourceRoot":"/source/"}