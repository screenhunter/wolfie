{"version":3,"sources":["/home/havvy/tennu/tennu/src/plugin/channel.sjs"],"names":["module","exports","init","client","nick","config","authPassword","nickserv","autojoinChannels","_socket","on","mode","log","say","Array","isArray","forEach","channel","join","line","info","note","disconnect"],"mappings":"AAAAA,MAAA,CAAOC,OAAP,GAAiB;AAAA,IACbC,IAAA,EAo0CU,UAp0CMC,MAo0CN,EAp0Cc;AAAA,QACpB,MAAMC,IAAA,GAAOD,MAAA,CAAOE,MAAP,CAAc,MAAd,CAAb,CADoB;AAAA,QAEpB,MAAMC,YAAA,GAAeH,MAAA,CAAOE,MAAP,CAAc,eAAd,CAArB,CAFoB;AAAA,QAGpB,MAAME,QAAA,GAAWJ,MAAA,CAAOE,MAAP,CAAc,UAAd,CAAjB,CAHoB;AAAA,QAIpB,MAAMG,gBAAA,GAAmBL,MAAA,CAAOE,MAAP,CAAc,UAAd,CAAzB,CAJoB;AAAA,QAMpBF,MAAA,CAAOM,OAAP,CAAeC,EAAf,CAAkB,OAAlB,EA8zCM,YA9zCiC;AAAA,YAEnC;AAAA,YAAAP,MAAA,CAAOQ,IAAP,CAAYP,IAAZ,EAAkB,GAAlB,EAFmC;AAAA,YAInC,IAAIE,YAAJ,EAAkB;AAAA,gBACdH,MAAA,CAAOS,GAAP,CAAW,QAAX,EAAqB,OAArB,EAA8B,0BAA9B,EADc;AAAA,gBAEdT,MAAA,CAAOU,GAAP,CAAWN,QAAX,EAAqB,cAAcD,YAAnC,EAFc;AAAA,aAJiB;AAAA,YASnC,IAAIQ,KAAA,CAAMC,OAAN,CAAcP,gBAAd,CAAJ,EAAqC;AAAA,gBACjCL,MAAA,CAAOS,GAAP,CAAW,QAAX,EAAqB,OAArB,EAA8B,2BAA9B,EADiC;AAAA,gBAEjCJ,gBAAA,CAAiBQ,OAAjB,CAmzCF,UAnzCqCC,OAmzCrC,EAnzC8C;AAAA,oBACxCd,MAAA,CAAOe,IAAP,CAAYD,OAAZ,EADwC;AAAA,iBAA5C,EAFiC;AAAA,aATF;AAAA,SAAvC,EANoB;AAAA,QAuBpBd,MAAA,CAAOM,OAAP,CAAeC,EAAf,CAAkB,MAAlB,EA6yCM,UA7yC8BS,IA6yC9B,EA7yCoC;AAAA,YACtChB,MAAA,CAAOiB,IAAP,CAAY,IAAZ,EAAkBD,IAAlB,EADsC;AAAA,SAA1C,EAvBoB;AAAA,QA4BpB;AAAA,QAAAhB,MAAA,CAAOO,EAAP,CAAU,OAAV,EAwyCM,YAxyCyB;AAAA,YAC3BP,MAAA,CAAOkB,IAAP,CAAY,OAAZ,EAAqB,yBAArB,EAD2B;AAAA,YAE3BlB,MAAA,CAAOmB,UAAP,GAF2B;AAAA,SAA/B,EA5BoB;AAAA,QAiCpB,OAAO,EAAP,CAjCoB;AAAA,KADX;AAAA,CAAjB","file":"startup.js","sourcesContent":["/*\n\nvar SSet = require(\"simplesets\").Set;\n\nvar isSelf = function (nrc, nick) {\n    return nrc.getNick() === nick;\n};\n\nvar channels = {};\n\nvar Channel = function (name) {\n    this.name = name;\n    this.users = new SSet();\n};\n\nChannel.prototype.addUser = function (user) {\n    this.users.add(user);\n};\n\nChannel.prototype.removeUser = function (user) {\n    this.users.remove(user);\n};\n\nvar removeUserChannel = function (user) {\n    channels[channel].removeUser(user);\n};\n\nvar selfPart = function (channel) {\n    channels[channel];\n};\n\nvar selfJoin = function (channel) {\n    channels[channel] = new Channel(channel);\n};\n\n/**\n * Responds to the 353 raw numeric, which is sent when joining a channel.\n * The Message object handles adding users and channel automatically, so\n * there really isn't any work that has to be done here other than actually\n * adding the channels to the users.\n *//*\nvar namesHandler = function (msg) {\n    msg.users.forEach(function (user) {\n        addChannelToUser(msg.channel, user);\n    });\n};\n\nvar onleave = function () {\n    var self = {\n        part: selfPart,\n        quit: function () {},\n        join: selfJoin\n    };\n\n    var user = {\n        part: removeUserChannel,\n        quit: userQuit,\n        join: addUserChannel\n    };\n\n    return function (msg) {\n        if (isSelf(this, msg.actor)) {\n            self[msg.type](msg.channel);\n        } else {\n            user[msg.type](msg.actor, msg.channel);\n        }\n    };\n}();\n\nvar onNick = function (msg) {\n    channels.forEach(function (channel) {\n        if (channel.users.has(msg.actor)) {\n            channel.users.remove(msg.actor);\n            channel.users.add(msg.newNick);\n        }\n    });\n};\n\nmodule.exports = {\n    name: \"users\",\n    exports: {\n        users:users\n    },\n    handlers: {\n        \"join part quit\" : onLeave,\n        \"nick\" : onNick,\n        \"353\" : namesHandler\n    }\n};\n\n*/\n\nmodule.exports = {\n    init: function (tennu) {\n        return {};\n    }\n};"],"sourceRoot":"/source/"}