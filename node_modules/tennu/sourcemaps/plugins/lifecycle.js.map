{"version":3,"sources":["/home/havvy/tennu/tennu/src/plugin/lifecycle.sjs"],"names":["format","require","EventEmitter","has","element","array","indexOf","module","exports","init","client","state","emitter","strictMode","config","alwaysRestart","shouldRestart","inState","states","edgeState","die","from","cause","deathData","crash","setState","restart","reason","error","nextState","data","transition","a0","a1","emit","restarting","data$2","killer","_end","previousState","TypeError","Error","note","hooks","lifecycle","plugin","subhooks","forEach","state$2","on","isEdgeState","rehash","requestRestart","getState"],"mappings":"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","file":"lifecycle.js","sourcesContent":["// Lifetime Plugin for Tennu\n//\n// State Machine for the state of the client.\n//\n// States\n// ------\n// initializing (default state)\n// initialized  (end of Tennu.Client ctor)\n// unstartable  (crash whlie in previous two states)\n// started      (socket emits running event)\n// running      (TBD: when identified & joined all autojoined channels)\n// dying        (this.exports.die called)\n// dead         (all onDie callbacks called, connection closed)\n// restarting   (this.exports.restart called + reasons for dead)\n// rehashing    (this.rehash called)\n\nconst format = require(\"util\").format;\nconst EventEmitter = require(\"events\").EventEmitter;\nconst has = function (element, array) {\n    return array.indexOf(element) !== -1;\n};\n\nmodule.exports = {\n    init: function (client) {\n        var state = \"initializing\";\n        const emitter = new EventEmitter();\n        const strictMode = client.config(\"strict-lifecycle\") || false;\n        const alwaysRestart = client.config(\"always-restart\") || false;\n        var shouldRestart = alwaysRestart;\n\n        function inState (states) {\n            return states.indexOf(state) !== -1;\n        };\n\n        function edgeState () {\n            return inState([\"unstartable\", \"crashed\", \"dead\"]);\n        }\n\n        function die (from, cause, deathData) {\n            if (edgeState()) return;\n\n            if (state !== \"running\") {\n                crash();\n                return;\n            }\n\n            setState(\"dying\", from, cause, deathData);\n        };\n\n        function restart (from, reason) {\n            if (inState([\"dying\", \"dead\", \"unstartable\"])) {\n                return;\n            }\n\n            if (inState([\"initializing\", \"initialized\"])) {\n                if (strictMode) {\n                    client.error(\"PluginLifecycle\", \"Strict Lifetime Violation - Trying to restart when not started.\");\n                    setState(\"unstartable\");\n                }\n            }\n        };\n\n        function crash () {\n            if (edgeState()) return;\n\n            if (inState(\"initialized\", \"initializing\")) {\n                setState(\"unstartable\");\n            }\n\n            setState(\"crashed\");\n\n            // Cannot crash a running or dead Tennu Client.\n        }\n\n        function setState (nextState, data) {\n            const transition = function {\n                \"initialized\" => {\n                    if (state !== \"initialized\") {\n                        if (strictMode) crash();\n                        return;\n                    }\n\n                    state = \"initialized\";\n                    emitter.emit(\"initialized\");\n                },\n\n                \"unstartable\" => {\n                    state = \"unstartable\";\n                    emitter.emit(\"unstartable\");\n                },\n\n                \"started\" => {\n                    state = \"started\";\n                    emitter.emit(\"started\");\n                    setState(\"running\", false);\n                },\n\n                (\"running\", restarting) => {\n                    state = \"running\";\n                    emitter.emit(\"running\", restarting);\n                },\n\n                (\"dying\", data) => {\n                    const killer = data[0];\n                    const reason = data[1];\n                    const deathData = data[2];\n\n                    state = \"dying\";\n                    emitter.emit(\"dying\", killer, reason, deathData);\n                    setState(shouldRestart ? \"restarting\" : \"dead\");\n                },\n\n                \"restarting\" => {\n                    state = \"restarting\";\n                    emitter.emit(\"restarting\");\n                    restart();\n                },\n\n                \"dead\" => {\n                    state = \"dead\";\n                    client._end();\n                    emitter.emit(\"dead\");\n                },\n\n                \"rehashing\" => {\n                    state = \"rehashing\";\n                    emitter.emit(\"rehash\");\n                    if (state !== \"rehashing\") return;\n                    emitter.emit(\"rehashed\");\n                    setState(\"running\", true);\n                },\n\n                (\"crashed\", previousState) => {\n                    emitter.emit(\"crash\", previousState);\n                }\n            };\n\n            if (edgeState()) {\n                throw new Error(format(\"Client cannot transition out of %s state.\", state));\n            }\n\n            client.note(format(\"Lifecycle Switching to state `%s`.\", nextState));\n            transition(nextState, data);\n        };\n\n        return {\n            hooks: {\n                lifecycle: function (plugin, subhooks) {\n                    [\"initialized\", \"started\", \"running\", \"dying\", \"dead\", \"restarting\", \"rehash\", \"rehashed\"]\n                    .forEach(function (state) {\n                        if (subhooks[state]) {\n                            emitter.on(state, subhooks[state]);\n                        }\n                    });\n                }\n            },\n\n            exports: {\n                setState: setState,\n                inState: inState,\n                isEdgeState: edgeState,\n                restart: function (reason) {\n                    shouldRestart = true;\n                    die(\"PluginLifecycle\", \"restarting\", reason);\n                },\n                die: die,\n\n                rehash: function () {\n                    return; // TBD in the future.\n                },\n\n                requestRestart: function () {\n                    shouldRestart = true;\n                },\n\n                getState: function () {\n                    return state;\n                }\n            }\n        };\n    }\n};"],"sourceRoot":"/source/"}