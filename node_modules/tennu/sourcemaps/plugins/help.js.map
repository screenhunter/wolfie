{"version":3,"sources":["/home/havvy/tennu/tennu/src/plugin/channel.sjs"],"names":["HELP_NOT_FOUND","isArray","require","format","inspect","Set","module","exports","init","client","imports","enabled","config","registry","commandset","helpResponseMessage","query","cursor","reduce","cursor$2","topic","undefined","hasOwnProperty","Array","handlers","command","notice","args","length","slice","response","message","intent","start","concat","array","join","help","helpObject","JSON","parse","stringify","hooks","module$2","Object","keys","forEach","key","TypeError","commands","add"],"mappings":"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","file":"help.js","sourcesContent":["/*\n\nvar SSet = require(\"simplesets\").Set;\n\nvar isSelf = function (nrc, nick) {\n    return nrc.getNick() === nick;\n};\n\nvar channels = {};\n\nvar Channel = function (name) {\n    this.name = name;\n    this.users = new SSet();\n};\n\nChannel.prototype.addUser = function (user) {\n    this.users.add(user);\n};\n\nChannel.prototype.removeUser = function (user) {\n    this.users.remove(user);\n};\n\nvar removeUserChannel = function (user) {\n    channels[channel].removeUser(user);\n};\n\nvar selfPart = function (channel) {\n    channels[channel];\n};\n\nvar selfJoin = function (channel) {\n    channels[channel] = new Channel(channel);\n};\n\n/**\n * Responds to the 353 raw numeric, which is sent when joining a channel.\n * The Message object handles adding users and channel automatically, so\n * there really isn't any work that has to be done here other than actually\n * adding the channels to the users.\n *//*\nvar namesHandler = function (msg) {\n    msg.users.forEach(function (user) {\n        addChannelToUser(msg.channel, user);\n    });\n};\n\nvar onleave = function () {\n    var self = {\n        part: selfPart,\n        quit: function () {},\n        join: selfJoin\n    };\n\n    var user = {\n        part: removeUserChannel,\n        quit: userQuit,\n        join: addUserChannel\n    };\n\n    return function (msg) {\n        if (isSelf(this, msg.actor)) {\n            self[msg.type](msg.channel);\n        } else {\n            user[msg.type](msg.actor, msg.channel);\n        }\n    };\n}();\n\nvar onNick = function (msg) {\n    channels.forEach(function (channel) {\n        if (channel.users.has(msg.actor)) {\n            channel.users.remove(msg.actor);\n            channel.users.add(msg.newNick);\n        }\n    });\n};\n\nmodule.exports = {\n    name: \"users\",\n    exports: {\n        users:users\n    },\n    handlers: {\n        \"join part quit\" : onLeave,\n        \"nick\" : onNick,\n        \"353\" : namesHandler\n    }\n};\n\n*/\n\nmodule.exports = {\n    init: function (tennu) {\n        return {};\n    }\n};"],"sourceRoot":"/source/"}