{"version":3,"sources":["/home/havvy/tennu/tennu/src/plugin/help.sjs"],"names":["HELP_NOT_FOUND","isArray","require","format","inspect","Set","module","exports","init","client","imports","enabled","config","registry","commandset","helpResponseMessage","query","cursor","reduce","cursor$2","topic","undefined","hasOwnProperty","Array","handlers","command","notice","args","length","slice","response","message","intent","start","concat","array","join","help","helpObject","JSON","parse","stringify","hooks","module$2","Object","keys","forEach","key","TypeError","commands","add"],"mappings":"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","file":"help.js","sourcesContent":["const HELP_NOT_FOUND = 'Help file for selected topic does not exist.';\r\n\r\nconst isArray = require('util').isArray;\r\nconst format = require('util').format;\r\nconst inspect = require('util').inspect;\r\nconst Set = require('simplesets').Set;\r\n\r\nmodule.exports = {\r\n    init: function (client, imports) {\r\n        const enabled = !(client.config('disable-help'));\r\n\r\n        if (!enabled) {\r\n            // Empty module.\r\n            return {};\r\n        }\r\n\r\n        const registry = {};\r\n        const commandset = new Set();\r\n\r\n        function helpResponseMessage (query) {\r\n            const cursor = query.reduce(function (cursor, topic) {\r\n                if (typeof cursor !== 'object') {\r\n                    return undefined;\r\n                }\r\n\r\n                if (cursor.hasOwnProperty(topic)) {\r\n                    return cursor[topic];\r\n                } else {\r\n                    return undefined;\r\n                }\r\n            }, registry);\r\n\r\n            if (cursor === undefined) {\r\n                return HELP_NOT_FOUND;\r\n            }\r\n\r\n            if (typeof cursor === 'string' || Array.isArray(cursor)) {\r\n                return cursor;\r\n            }\r\n\r\n            if (typeof cursor['*'] === 'string' || Array.isArray(cursor['*'])) {\r\n                return cursor['*'];\r\n            }\r\n\r\n            return HELP_NOT_FOUND;\r\n        }\r\n\r\n        return {\r\n            handlers: {\r\n                '!help': function (command) {\r\n                    client.notice('ModHelp', '!help being handled.');\r\n                    // Default to showing the help for the help module if no args given.\r\n                    const query = command.args.length === 0 ? ['help'] : command.args.slice();\r\n                    const response = helpResponseMessage(query);\r\n                    return {\r\n                        message: response,\r\n                        query: true,\r\n                        intent: 'say'\r\n                    };\r\n                },\r\n\r\n                '!commands': function (command) {\r\n                    client.notice('ModHelp', '!commands being handled.');\r\n\r\n                    const start = [\"List of known commands: \"];\r\n                    return start.concat(commandset.array().join(\", \"));\r\n                }\r\n            },\r\n\r\n            exports: {\r\n                help: helpResponseMessage,\r\n                helpObject: function () { return JSON.parse(JSON.stringify(registry)); },\r\n                HELP_NOT_FOUND: HELP_NOT_FOUND\r\n            },\r\n\r\n            hooks: {\r\n                help: function (module, help) {\r\n                    if (typeof help === 'string') {\r\n                        registry[module] = {'*': help}\r\n                        return;\r\n                    }\r\n\r\n                    if (Array.isArray(help)) {\r\n                        registry[module] = {'*': help}\r\n                        return;\r\n                    }\r\n\r\n                    if (typeof help === 'object') {\r\n                        Object.keys(help).forEach(function (key) {\r\n                            if (key === '*') {\r\n                                registry[module] = help['*'];\r\n                            }\r\n\r\n                            registry[key] = help[key];\r\n                        });\r\n                        return;\r\n                    }\r\n\r\n                    throw new TypeError(format('Help property for module %s is invalid.', module));\r\n                },\r\n\r\n                commands: function (module, commands) {\r\n                    if (!Array.isArray(commands)) {\r\n                        throw new TypeError(format('Commands property for module %s is invalid.', module));\r\n                    }\r\n\r\n                    commands.forEach(function (command) {\r\n                        if (typeof command !== 'string') {\r\n                            throw new TypeError(format('Commands property for module %s is invalid.', module));\r\n                        }\r\n\r\n                        commandset.add(command);\r\n                    });\r\n                }\r\n            },\r\n\r\n            help: {\r\n                help: [\r\n                    '!help <query>',\r\n                    ' ',\r\n                    'Display the help message for the topic located at the given query.',\r\n                    'Query can be made of multiple subtopics',\r\n                    'Without a query, shows this help message.',\r\n                    '',\r\n                    'Ex: !help commands',\r\n                    'Ex: !help uno start'\r\n                ],\r\n\r\n                commands: [\r\n                    '!commands',\r\n                    ' ',\r\n                    'Show the list of commands.'\r\n                ]\r\n            },\r\n\r\n            commands: ['help', 'commands']\r\n        };\r\n    }\r\n};"],"sourceRoot":"/source/"}