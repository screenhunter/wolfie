{"version":3,"sources":["/home/havvy/tennu/tennu/src/plugin/channel.sjs"],"names":["module","exports","init","client","imports","isupport","_messageHandler","handlers","isupportMessage","params","map","param","split","forEach","a0","Array","isArray","Object","prototype","toString","call","length","supported","value","TypeError"],"mappings":"AAAAA,MAAA,CAAOC,OAAP,GAAiB;AAAA,IACbC,IAAA,EAo0CU,UAp0CMC,MAo0CN,EAp0CcC,OAo0Cd,EAp0CuB;AAAA,QAC7B,MAAMC,QAAA,GAAW,EAAjB,CAD6B;AAAA,QAG7BF,MAAA,CAAOG,eAAP,CAAuBD,QAAvB,CAAgCA,QAAhC,EAH6B;AAAA,QAK7B,OAAO;AAAA,YACHE,QAAA,EAAU;AAAA,gBACN,OA6zCF,UA7zCmBC,eA6zCnB,EA7zCoC;AAAA,oBAC9BA,eAAA,CAAgBC,MAAhB,CAAuBC,GAAvB,CA4zCN,UA5zC2CC,KA4zC3C,EA5zCkD;AAAA,wBACxC,OAAOA,KAAA,CAAMC,KAAN,CAAY,GAAZ,CAAP,CADwC;AAAA,qBAA5C,EAEGC,OAFH,CA08BR,UAj8BMC,EAi8BN,EAA6B;AAAA,wBAkG/B,IA+NQC,KAAA,CAAMC,OAAN,GACED,KAAA,CAAMC,OAAN,CAnwCFF,EAmwCE,CADF,GAEEG,MAAA,CAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CApwCFN,EAowCE,MAAyC,gBAjOnD,EAAW;AAAA,4BAQX,IA3iCQA,EAAA,CA2iCCO,MA3iCD,MA2iCR,EAA0B;AAAA,gCA3iClB,IANQC,SAAA,GAMRR,EAAA,IA2iCkB;AAAA,gCAjjCK,OAAAT,QAAA,CAASiB,SAAT,IAAsB,IAAtB,CAijCL;AAAA,6BARf;AAAA,4BAQX,IA3iCQR,EAAA,CA2iCCO,MA3iCD,MA2iCR,EAA0B;AAAA,gCA3iClB,IALQC,SAAA,GAKRR,EAAA,IA2iCkB;AAAA,gCA3iClB,IALmBS,KAAA,GAKnBT,EAAA,IA2iCkB;AAAA,gCAhjCY,OAAAT,QAAA,CAASiB,SAAT,IAAsBC,KAAtB,CAgjCZ;AAAA,6BARf;AAAA,yBAlGoB;AAAA,wBA6S/B,MAAM,IAAIC,SAAJ,CAAc,UAAd,CAAN,CA7S+B;AAAA,qBA18BrB,EAD8B;AAAA,iBAD5B;AAAA,aADP;AAAA,YAYHvB,OAAA,EAAS,EACLI,QAAA,EAAUA,QADL,EAZN;AAAA,SAAP,CAL6B;AAAA,KADpB;AAAA,CAAjB","file":"server.js","sourcesContent":["/*\n\nvar SSet = require(\"simplesets\").Set;\n\nvar isSelf = function (nrc, nick) {\n    return nrc.getNick() === nick;\n};\n\nvar channels = {};\n\nvar Channel = function (name) {\n    this.name = name;\n    this.users = new SSet();\n};\n\nChannel.prototype.addUser = function (user) {\n    this.users.add(user);\n};\n\nChannel.prototype.removeUser = function (user) {\n    this.users.remove(user);\n};\n\nvar removeUserChannel = function (user) {\n    channels[channel].removeUser(user);\n};\n\nvar selfPart = function (channel) {\n    channels[channel];\n};\n\nvar selfJoin = function (channel) {\n    channels[channel] = new Channel(channel);\n};\n\n/**\n * Responds to the 353 raw numeric, which is sent when joining a channel.\n * The Message object handles adding users and channel automatically, so\n * there really isn't any work that has to be done here other than actually\n * adding the channels to the users.\n *//*\nvar namesHandler = function (msg) {\n    msg.users.forEach(function (user) {\n        addChannelToUser(msg.channel, user);\n    });\n};\n\nvar onleave = function () {\n    var self = {\n        part: selfPart,\n        quit: function () {},\n        join: selfJoin\n    };\n\n    var user = {\n        part: removeUserChannel,\n        quit: userQuit,\n        join: addUserChannel\n    };\n\n    return function (msg) {\n        if (isSelf(this, msg.actor)) {\n            self[msg.type](msg.channel);\n        } else {\n            user[msg.type](msg.actor, msg.channel);\n        }\n    };\n}();\n\nvar onNick = function (msg) {\n    channels.forEach(function (channel) {\n        if (channel.users.has(msg.actor)) {\n            channel.users.remove(msg.actor);\n            channel.users.add(msg.newNick);\n        }\n    });\n};\n\nmodule.exports = {\n    name: \"users\",\n    exports: {\n        users:users\n    },\n    handlers: {\n        \"join part quit\" : onLeave,\n        \"nick\" : onNick,\n        \"353\" : namesHandler\n    }\n};\n\n*/\n\nmodule.exports = {\n    init: function (tennu) {\n        return {};\n    }\n};"],"sourceRoot":"/source/"}